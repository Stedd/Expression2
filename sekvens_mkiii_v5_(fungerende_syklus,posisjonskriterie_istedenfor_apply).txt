@name sekvens MKIII v5 (fungerende_syklus,posisjonskriterie istedenfor apply)
@inputs Dr1:entity Start Stop T1x T1y T1z GRE:entity Gr1 TimerRead
@outputs Apply:vector AngleReg:angle Debug Steg Grabber1 Timer
@persist AngleReg:angle Apply:vector Dr1:entity Rangemin:vector2 Rangemax:vector2 RangeminS:vector2 RangemaxS:vector2 Pos:vector2
@trigger 
runOnTick(1)
    
###Drone movement parameters------------------------
    AFDF        = 20                    #Apply force delta faktor
    AAFDF       = 13                    #Apply angular force delta faktor
    PAF         = 2                     #Avviksforsterning Posisjon
    AAF         = 7                     #Avviksforsterkning Vinkel
    ZAdjust     = 80                    #Hoydeavvik
    Rangemin    = vec2(-70,-70)  #Range min
    Rangemax    = vec2(70,70)      #Range max
    RangeminS   = vec2(-7,-7)    #Range min
    RangemaxS   = vec2(7,7)        #Range max

#Keep Upright
    AngleReg = (ang(0,0,0) - Dr1:angles())*Dr1:mass()*AAF
    Dr1:applyAngForce(AngleReg+($AngleReg*AAFDF))
    
#Pos Kriterie

Pos=(vec2(T1x,T1y)-(vec2(Dr1:pos():x(),Dr1:pos():y())))

#Hovedminne
    if (Start==1){
        Steg=1
}
    elseif (Stop==1){
        Steg=0
}

#Idle position!
if(Steg==0){
        Grabber1 = 0
        Apply = (vec(782,-432,200) - Dr1:pos())*Dr1:mass()*PAF
    }
    
#Safeguard bytte target
if(Steg ==3 && Gr1 == 0 && Grabber1 ==1){
    Timer = 1
    if(TimerRead>3){
        Steg=1
    }
}
#Sekvens
#1--------------
if (Steg==1){
    Apply = (vec(T1x,T1y,T1z+ZAdjust) - Dr1:pos())*Dr1:mass()*PAF
    Grabber1 = 0
    Timer = 0
        if(inrange(Pos,Rangemin,Rangemax)){
            Steg=2
        }
}
#2--------------
elseif(Steg==2){
    Apply = (vec(T1x,T1y,T1z+ZAdjust) - Dr1:pos())*Dr1:mass()*PAF
    Grabber1 = 0
        if(inrange(Pos,Rangemin,Rangemax)){
            Steg=3
        }
}
#3--------------
elseif(Steg==3){
    Apply = (vec(T1x,T1y,T1z+ZAdjust) - Dr1:pos())*Dr1:mass()*PAF
    if(inrange(Pos,RangeminS,RangemaxS)){
        Grabber1 = 1
        GRE:setMass(1)
    }
    
    if((GRE:model()=="models/xqm/rails/gumball_1.mdl")){
        Steg=4
    }
}
#4--------------
elseif(Steg==4){
    Apply = (vec(940,565,400) - Dr1:pos())*Dr1:mass()*PAF    
    if(inrange(Pos,Rangemin,Rangemax)){
        Steg=5
    }
}
#5--------------
elseif(Steg==5){ 
    Apply = (vec(940,565,180) - Dr1:pos())*Dr1:mass()*PAF
    if(inrange(Pos,RangeminS,RangemaxS)){
        Grabber1=0
        
        if((GRE:model()!="models/xqm/rails/gumball_1.mdl")){
            Steg=6
        }
    }
}
#6--------------
elseif(Steg==6){ 
    Grabber1 = 0
    Apply = (vec(940,565,400) - Dr1:pos())*Dr1:mass()*PAF    
    if(inrange(Pos,Rangemin,Rangemax)){
        Steg=1
    }
}

#Applyforce
Dr1:applyForce(Apply+$Apply*AFDF)

#Debug
Debug = (Grabber1 ==1 && !(GRE:model()=="models/xqm/rails/gumball_1.mdl"))
