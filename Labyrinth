@name aMaze
@inputs Move1Step Start:vector Aimvector:vector
@outputs Gyrodbg:angle Ndist Sdist Edist Wdist Moving
@persist Holdtimer PosError:vector OpenPaths:table Ptrig Step:vector VirtPos:vector NDist SDist EDist WDist CtCDist DronePos:vector Dmass Drone:entity A:angle V:vector Scanner:ranger [ScanDir,DirN, DirS, DirE, DirW]:vector
@trigger 
@model models/mechanics/wheels/wheel_rounded_36.mdl
runOnTick(1)

if (first())
{
    #Center Center Distance
    CtCDist = 95.353
    
    ##Define directions
    DirN = vec(-1,0,0)
    DirS = vec(1,0,0)
    DirE = vec(0,1,0)
    DirW = vec(0,-1,0)
    
    #Init Some values
    VirtPos = Start
    Step = Start
    Ptrig = 0
    Moving = 0
}

#######Functions#######

function void keepPos(TargetVector:vector)
{
    #Mass
    Drone = entity()
    Drone:setMass(10000)
    Dmass = Drone:mass()
    #Angle 
    A = -ang(Drone:angles():pitch(),Drone:angles():yaw(),Drone:angles():roll())
    Drone:applyAngForce((A + $A*30)*Dmass)
    #Applyforce
    V = (TargetVector+vec(0,0,30)-DronePos)
    Drone:applyForce((V + $V*30)*Dmass)
}

function number scanner(ScanDir:vector)
{
    Scanner = rangerOffset(2000,DronePos,ScanDir)
    return Scanner:distance()
}

function void wallScan()
{
    #N
    Ndist = scanner(DirN)
    #S
    Sdist = scanner(DirS)
    #E
    Edist = scanner(DirE)
    #W
    Wdist = scanner(DirW)
}

function vector step(StepDir:vector, StepDist)
{
    Step = Start+(StepDir*CtCDist*round((StepDist-47.58)/CtCDist))
    return Step
}

function void decider()
{
    if(Moving == 0)
    {
        if (Ndist >50 && random(1)>0.25){
            print("N")
            Moving = 1
            Holdtimer = 0
            step(DirN,Ndist)
        }
        if (Sdist >50 && random(1)>0.25){
            print("S")
            Moving =1
            Holdtimer = 0
            step(DirS,Sdist)
        }
        if (Edist >50 && random(1)>0.25){
            print("E")
            Moving = 1
            Holdtimer = 0
            step(DirE,Edist)
        }
        if (Wdist >50 && random(1)>0.25){
            print("W")
            Moving = 1
            Holdtimer = 0
            step(DirW,Wdist)
        }
    }
if(Move1Step){
    Step = Start
}
    #step(DirN,Ndist)
    #step(DirS,Sdist)
    #step(DirE,Edist)
    #step(DirW,Wdist)
}

function void mover()
{
    #print(Step)
    VirtPos = Step
    PosError = VirtPos+vec(0,0,30)-DronePos+vec(0,0,30)
    #print("Fiskekaker"+PosError)
    if (PosError:x()<0.03 && PosError:y()<0.03){
        Holdtimer++
        if (Holdtimer > 200){
            print("Fiskeboller i hvitsaus")
            Moving = 0
        }
    
    }
}

function void saver()
{
    
}


#######Main Loop#######

DronePos = Drone:pos()+entity():massCenterL()
#print(entity():massCenterL())
keepPos(VirtPos)
wallScan()
decider()
mover()
#saver()




